<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 
		 
		 creationComplete="creationCompleteHandler()"
	 >
	
	
	<fx:Script>
		<![CDATA[
			import com.treegger.airim.controller.ChatController;
			import com.treegger.airim.controller.ChatEvent;
			import com.treegger.airim.controller.Contact;
			import com.treegger.airim.controller.PreferencesController;
			import com.treegger.protobuf.TextMessage;
			
			import mx.collections.ArrayCollection;
			import mx.events.DynamicEvent;
			
			import org.swizframework.core.SwizManager;
			import org.swizframework.events.ChainEvent;
			

			[Inject]
			public var preferenceController:PreferencesController;

			private var _chatController:ChatController;
			[Inject][Bindable]
			public function set chatController( value:ChatController ):void
			{
				_chatController = value;
				
				_chatController.addEventListener( ChatEvent.TEXTMESSAGE, function( event:ChatEvent ):void
				{
					const chatWindow:ChatWindow = openChatWindowForContact( event.targetContact );
					chatWindow.selectedContact = event.targetContact;
					if( chatWindow.currentChatPannel )
						chatWindow.currentChatPannel.displayPendingTextMessage();
				});
				_chatController.addEventListener( ChatEvent.STRATUSVIDEO, function( event:ChatEvent ):void
				{
					const chatWindow:ChatWindow = openChatWindowForContact( event.targetContact );
					chatWindow.selectedContact = event.targetContact;
					chatWindow.openVideoWindow();
				});
			}
			public function get chatController():ChatController
			{
				return _chatController;	
			}
			
			
			[PostConstruct]
			public function authenticate():void
			{
				if( preferenceController.userAccount && !chatController.authenticated )
				{
					chatController.authenticate( preferenceController.userAccount );
				}
			}
			
			private var chatWindow:ChatWindow; 
			
			private function creationCompleteHandler():void
			{
				rosterList.addEventListener( "contactDoubleClick", function( event:DynamicEvent ):void
				{
					openChatWindowForContact( event.contact );	
					event.stopPropagation();
				});
				
			}

			
			private function openChatWindowForContact( contact:Contact ):ChatWindow
			{
				if( !chatWindow )
				{
					chatWindow = new ChatWindow();
					chatWindow.addEventListener( Event.CLOSE, function( event:Event ):void{ chatWindow = null; } );
					SwizManager.setUp( chatWindow );
				}
				
				chatWindow.addChatContact( contact );
				chatWindow.open( true );
				chatWindow.activate();
				return chatWindow;

			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:List id="rosterList" width="100%" borderVisible="false" 
			contentBackgroundAlpha="0"
			rollOver="event.preventDefault(); event.stopPropagation()" 
			itemRenderer="com.treegger.airim.view.RosterItem"
			dataProvider="{chatController.contacts}"
			>
		<s:layout>
			<s:VerticalLayout horizontalAlign="left" gap="1"/>
		</s:layout>
	</s:List>

</s:Group>
