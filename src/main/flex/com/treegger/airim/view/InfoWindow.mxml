<?xml version="1.0" encoding="utf-8"?>
<s:Window 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"

	width="{group.width+5}" height="{group.height+5}"
	transparent="true"
	systemChrome="none"
	type="lightweight"
	showStatusBar="false"
	backgroundAlpha="0"
	alpha="0"
	creationComplete="creationCompleteHandler()"
	windowActivate="windowActivateHandler()"
	focusEnabled="false"
>
	<fx:Metadata>
		[ResourceBundle("airim")]
	</fx:Metadata>
	<fx:Declarations>
		<s:Fade id="fadeIn" target="{this}" alphaFrom="0" alphaTo="1" duration="200"/>
		<s:Fade id="fadeOut" target="{this}" alphaFrom="1" alphaTo="0" duration="500" effectEnd="close()"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.treegger.airim.controller.ChatController;
			import com.treegger.airim.model.Contact;
			
			import mx.events.EffectEvent;
			
			[Embed(source='icons/default-avatar-32x32.png')]
			[Bindable]
			private var DefaultAvatar:Class;     
			
			[Inject]
			public var chatController:ChatController;
			
			public var contact:Contact;
			
			public var activated:Boolean = false;
			private function windowActivateHandler():void
			{
				trace( "Info active" );
				activated = true;
				nativeWindow.x = _nativeX;
				nativeWindow.y = _nativeY;
			}
			
			private function creationCompleteHandler():void
			{
				showWindow();
			}
			
			public function showWindow():void
			{

				if( initialized )
				{
					trace( "Info show" );
					if( contact.photoURL ) image.source = contact.photoURL;
					else 
					{
						image.source = new DefaultAvatar;
						if( !contact.vCardFetched ) chatController.requestVCard( contact );
					}
					nameLabel.text = contact.name;
					nicknameLabel.text = contact.nickname;
					statusText.text = getStatusText();
					fadeIn.play();
					fadeOut.pause();
					nativeWindow.x = _nativeX;
					nativeWindow.y = _nativeY;
				}
			}
			
			public function getStatusText():String
			{
				if( contact.composing ) return resourceManager.getString('airim','statusComposing');
				else if( contact.available ) return resourceManager.getString('airim','statusAvailable');
				else if( contact.away ) return resourceManager.getString('airim','statusAway');
				else if( contact.dnd ) return resourceManager.getString('airim','statusDND');
				return "Unavaiable";
			}
			
			public function hideWindow():void
			{
				if( initialized )
				{
					fadeOut.play();
					fadeIn.pause();
				}
			}
			
			private var _nativeX:int;
			public function set nativeX( value:int ):void
			{
				_nativeX = value;
				if( activated  || initialized) nativeWindow.x = value;
			}
			private var _nativeY:int;
			public function set nativeY( value:int ):void
			{
				_nativeY = value;
				if( activated || initialized ) nativeWindow.y = value;
			}
		]]>
	</fx:Script>
	<fx:Declarations>
	</fx:Declarations>
	
	<s:Group id="group" minWidth="150">
		
		<s:Rect height="100%" width="100%">
			<s:fill>
				<s:SolidColor alpha="0.8" color="0xffffff"/>
			</s:fill>
			<s:stroke>
				<s:SolidColorStroke alpha="0.5" color="0x444444"/>
			</s:stroke>
		</s:Rect>

		<s:HGroup gap="10" paddingTop="5" paddingBottom="5" paddingLeft="5" paddingRight="5" width="100%">
			<mx:Image id="image" source="" width="48" height="48"
					  horizontalCenter="0" verticalCenter="0" smoothBitmapContent="true"/>

			<s:VGroup gap="5" horizontalAlign="center" width="100%">
				<s:Label id="nameLabel" fontSize="14" fontWeight="bold"/>
				<s:Label id="nicknameLabel" fontSize="12"/>
				<s:Label id="statusText" fontSize="12" fontStyle="italic"/>
			</s:VGroup>
		</s:HGroup>
		

	</s:Group>
	
	<s:filters>
		<s:DropShadowFilter
			color="0x000000"
			alpha= "0.2"
			blurX= "5"
			blurY = "5"
			distance = "5"

			/>
	</s:filters>
</s:Window>
