<?xml version="1.0" encoding="utf-8"?>
<s:Window 
	xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	transparent="false"
	systemChrome="standard"
	title="Preferences"
	maximizable="false"
	resizable="false"
	type="normal"
	showStatusBar="false"
	height="200" width="320"
	creationComplete="creationCompleteHandler(event)"
	>
	<fx:Script>
		<![CDATA[
			import com.treegger.airim.controller.ChatController;
			import com.treegger.airim.controller.ChatEvent;
			import com.treegger.airim.controller.PreferencesController;
			import com.treegger.protobuf.AuthenticateResponse;
			import com.treegger.util.FileSerializer;
			import com.treegger.util.preferences.UserAccount;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;

			
			[Inject]
			public var chatController:ChatController;

			[Inject]
			public var preferenceController:PreferencesController;
			
			[Bindable]
			private var userAccount:UserAccount;
			
			
			
			private function creationCompleteHandler(event:Event):void
			{
				userAccount = preferenceController.userAccount;
				if( !userAccount ) userAccount = new UserAccount();
			}
			
			private function saveHandler( event:Event):void
			{
				
				currentState = "disabled";
				
				chatController.authenticate( userAccount );
				chatController.addEventListener( ChatEvent.AUTHENTICATION, function( event:ChatEvent ):void
				{
					currentState = "normal";

					if( chatController.authenticated )
					{
						preferenceController.userAccount = userAccount;
						close();
					}
					else
					{
						Alert.show( "Wrong username or password", "Unable to authenticate", mx.controls.Alert.OK, mainGroup );
					}
				} );
				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="disabled" />
	</s:states>

	
	<s:VGroup id="mainGroup" top="20" left="20" right="20" bottom="10" width="100%" enabled="true" enabled.disabled="false" >
		<s:HGroup horizontalAlign="center" verticalAlign="middle" width="100%" height="30">
			<s:Label text="Account settings" fontSize="16" fontWeight="bold"/>
		</s:HGroup>
		
		<s:HGroup verticalAlign="middle" width="100%">
			<s:Label width="100" text="Username" fontWeight="bold" />
			<s:TextInput id="usernameInput" width="100%" text="{userAccount.username}" change="userAccount.username = usernameInput.text" />
		</s:HGroup>
		
		<s:HGroup verticalAlign="middle" width="100%">
			<s:Label width="100" text="Social Network" fontWeight="bold" />
			<s:ComboBox id="socialNetworkInput" width="100%"
						dataProvider="{new ArrayCollection(['Twitter','Foursquare'])}" 
						selectedItem="{userAccount.socialNetwork}"
						change="userAccount.socialNetwork = socialNetworkInput.selectedItem"
			/>
		</s:HGroup>
		
		<s:HGroup verticalAlign="middle" width="100%">
			<s:Label width="100"  text="Password" fontWeight="bold"/>
			<s:TextInput id="passwordInput"  width="100%" displayAsPassword="true" text="{userAccount.password}" change="userAccount.password = passwordInput.text" />
		</s:HGroup>
		
		<s:HGroup verticalAlign="middle" width="100%">
			<s:Group width="100"/>
			<s:Button label="Save" click="saveHandler( event )" />
		</s:HGroup>
		
		
	</s:VGroup>
	
</s:Window>
