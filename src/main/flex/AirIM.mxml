<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication 
   	xmlns:s="library://ns.adobe.com/flex/spark"
   	xmlns:fx="http://ns.adobe.com/mxml/2009"
	creationComplete="creationCompleteHandler()" 
	backgroundAlpha="0"
	showStatusBar="false"
	useNativeDragManager="true"
	
	
>
	<fx:Script>
	<![CDATA[
		import air.update.ApplicationUpdaterUI;
		import air.update.events.UpdateEvent;
		
		import com.treegger.service.TreeggerService;
		
		import flash.events.ErrorEvent;
		
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		
		import spark.filters.DropShadowFilter;
		
		private var appUpdater:ApplicationUpdaterUI = new ApplicationUpdaterUI();
	
		private const treeggerService:TreeggerService = new TreeggerService();
		
		private function creationCompleteHandler():void
		{
			this.addEventListener(MouseEvent.MOUSE_DOWN, onMouseDown);
			var shadowFilter:DropShadowFilter = new DropShadowFilter();
			shadowFilter.color = 0x000000;
			shadowFilter.alpha = 0.4;
			shadowFilter.blurX = 5;
			shadowFilter.blurY = 5;
			shadowFilter.distance = 5;
			filters = [shadowFilter];

			this.height = box.height+4;
			this.width = box.width+4;
			//checkForUpdate();
		}
		
		private function onMouseDown(evt:MouseEvent):void
		{
			stage.nativeWindow.startMove();
		}
		
		
		private function checkForUpdate():void {
			setApplicationVersion(); // Find the current version so we can show it below			
			appUpdater.updateURL = "http://ws.treegger.com/air/update.xml"; // Server-side XML file describing update
			appUpdater.isCheckForUpdateVisible = false; // We won't ask permission to check for an update
			appUpdater.addEventListener(UpdateEvent.INITIALIZED, onUpdate); // Once initialized, run onUpdate
			appUpdater.addEventListener(ErrorEvent.ERROR, onError); // If something goes wrong, run onError
			appUpdater.initialize(); // Initialize the update framework
		}
	
		private function onError(event:ErrorEvent):void {
			Alert.show(event.toString());
		}
		
		private function onUpdate(event:UpdateEvent):void {
			appUpdater.checkNow(); // Go check for an update now
		}
	
		// Find the current version for our Label below
		private function setApplicationVersion():void {
			var appXML:XML = NativeApplication.nativeApplication.applicationDescriptor;
			var ns:Namespace = appXML.namespace();
			ver.text = "Current version is " + appXML.ns::version;
		}
		
	]]>
	</fx:Script>
	
		<s:VGroup gap="1" id="box">
			<s:Label id="ver" />
			<s:Button label="Connect" click="treeggerService.connect()"/>
			<s:HGroup>
				<s:TextInput id="user" />
				<s:ComboBox id="socialNetwork" dataProvider="{new ArrayCollection(['Twitter','Foursquare'])}" selectedIndex="0"/>
				<s:TextInput id="password" displayAsPassword="true"/>
				
				<s:Button label="Auth" click="treeggerService.authenticate( user.text, socialNetwork.selectedItem.toString().toLocaleLowerCase(), password.text, 'AirIM' )"/>
				
			</s:HGroup>
			
			
			<s:List id="rosterList" borderVisible="false" contentBackgroundAlpha="0"
					rollOver="event.preventDefault(); event.stopPropagation()" itemRenderer="RosterItem">
				<s:dataProvider>
					<s:ArrayList>
						<fx:Object firstName="Ann"  lastName="Green" />
						<fx:Object firstName="Tom"  lastName="Smith" />
						<fx:Object firstName="John" lastName="Black" />
						<fx:Object firstName="Jane" lastName="White" />
						<fx:Object firstName="Bill" lastName="Jones" />
					</s:ArrayList>
				</s:dataProvider>
			</s:List>
		</s:VGroup>
	
</s:WindowedApplication>
